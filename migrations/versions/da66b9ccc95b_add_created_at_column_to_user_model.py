"""Add created_at column to User model

Revision ID: da66b9ccc95b
Revises: 01cebf8a5eb8
Create Date: 2024-10-06 23:23:59.917398

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'da66b9ccc95b'
down_revision = '01cebf8a5eb8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('stats')
    op.drop_table('faction')
    op.drop_table('feature_access')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feature_access',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('feature', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='feature_access_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feature_access_pkey'),
    sa.UniqueConstraint('user_id', 'feature', name='_user_feature_uc')
    )
    op.create_table('faction',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('faction_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('invitation_code', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('leader_username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='faction_pkey'),
    sa.UniqueConstraint('invitation_code', name='faction_invitation_code_key'),
    sa.UniqueConstraint('name', name='faction_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_wins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_losses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assaults_won', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assaults_lost', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('defending_battles_won', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('defending_battles_lost', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('kills', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('destroyed_traps', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('lost_associates', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('lost_traps', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('healed_associates', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('wounded_enemy_associates', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('enemy_turfs_destroyed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('turf_destroyed_times', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eliminated_enemy_influence', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='stats_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stats_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('faction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['faction_id'], ['faction.id'], name='user_faction_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    # ### end Alembic commands ###
